[
  {
    "name": "cellClick",
    "description": "Fired when a cell is clicked. Called with a <a href=\"/api/data-grid/grid-cell-params/\">GridCellParams</a> object."
  },
  {
    "name": "cellDoubleClick",
    "description": "Fired when a cell is double-clicked. Called with a <a href=\"/api/data-grid/grid-cell-params/\">GridCellParams</a> object."
  },
  {
    "name": "cellEditCommit",
    "description": "Fired when the props of the edit input are committed. Called with a GridEditCellPropsParams object."
  },
  {
    "name": "cellEditStart",
    "description": "Fired when the cell turns to edit mode. Called with a <a href=\"/api/data-grid/grid-cell-params/\">GridCellParams</a> object."
  },
  {
    "name": "cellEditStop",
    "description": "Fired when the cell turns back to view mode. Called with a <a href=\"/api/data-grid/grid-cell-params/\">GridCellParams</a> object."
  },
  {
    "name": "cellFocusIn",
    "description": "Fired when a cell gains focus. Called with a <a href=\"/api/data-grid/grid-cell-params/\">GridCellParams</a> object."
  },
  {
    "name": "cellFocusOut",
    "description": "Fired when a cell loses focus. Called with a <a href=\"/api/data-grid/grid-cell-params/\">GridCellParams</a> object."
  },
  {
    "name": "cellKeyDown",
    "description": "Fired when a <code>keydown</code> event happens in a cell. Called with a <a href=\"/api/data-grid/grid-cell-params/\">GridCellParams</a> object."
  },
  {
    "name": "cellMouseDown",
    "description": "Fired when a <code>mousedown</code> event happens in a cell. Called with a <a href=\"/api/data-grid/grid-cell-params/\">GridCellParams</a> object."
  },
  {
    "name": "cellMouseUp",
    "description": "Fired when a <code>mouseup</code> event happens in a cell. Called with a <a href=\"/api/data-grid/grid-cell-params/\">GridCellParams</a> object."
  },
  {
    "name": "columnHeaderClick",
    "description": "Fired when a column header is clicked. Called with a GridColumnHeaderParams object."
  },
  {
    "name": "columnHeaderDoubleClick",
    "description": "Fired when a column header is double-clicked. Called with a GridColumnHeaderParams object."
  },
  {
    "name": "columnHeaderKeyDown",
    "description": "Fired when a key is pressed in a column header. It&#39;s mapped do the <code>keydown</code> DOM event.\nCalled with a GridColumnHeaderParams object."
  },
  { "name": "columnOrderChange", "description": "Fired when the user ends reordering a column." },
  {
    "name": "columnResize",
    "description": "Fired during the resizing of a column. Called with a GridColumnResizeParams object."
  },
  {
    "name": "columnResizeStart",
    "description": "Fired when the user starts resizing a column. Called with an object <code>{ field: string }</code>."
  },
  {
    "name": "columnResizeStop",
    "description": "Fired when the user stops resizing a column. Called with an object <code>{ field: string }</code>."
  },
  {
    "name": "columnsChange",
    "description": "Fired when the columns state is changed.\nCalled with an array of strings corresponding to the field names."
  },
  {
    "name": "columnVisibilityChange",
    "description": "Fired when a column visibility changes. Called with a GridColumnVisibilityChangeParams object."
  },
  {
    "name": "columnWidthChange",
    "description": "Fired when the width of a column is changed. Called with a GridColumnResizeParams object."
  },
  { "name": "componentError", "description": "Fired when an exception is thrown in the grid." },
  {
    "name": "debouncedResize",
    "description": "Fired when the grid is resized with a debounced time of 60ms. Called with a ElementSize object."
  },
  {
    "name": "editCellPropsChange",
    "description": "Fired when the props of the edit cell changes. Called with a GridEditCellPropsParams object."
  },
  {
    "name": "editRowsModelChange",
    "description": "Fired when the row editing model changes. Called with a GridEditRowModelParams object."
  },
  {
    "name": "filterModelChange",
    "description": "Fired when the filter model changes.\nCalled with a GridFilterModel object."
  },
  {
    "name": "headerSelectionCheckboxChange",
    "description": "Fired when the value of the selection checkbox of the header is changed\nCalled with a GridHeaderSelectionCheckboxParams object."
  },
  { "name": "pageChange", "description": "Fired when the page changes." },
  { "name": "pageSizeChange", "description": "Fired when the page size changes." },
  {
    "name": "resize",
    "description": "Fired when the grid is resized. Called with a ElementSize object."
  },
  {
    "name": "rowClick",
    "description": "Fired when a row is clicked. Called with a <a href=\"/api/data-grid/grid-row-params/\">GridRowParams</a> object."
  },
  {
    "name": "rowDoubleClick",
    "description": "Fired when a row is double-clicked. Called with a <a href=\"/api/data-grid/grid-row-params/\">GridRowParams</a> object."
  },
  {
    "name": "rowEditCommit",
    "description": "Fired when the props of the edit input are committed. Called with the GridRowId of the row."
  },
  {
    "name": "rowEditStart",
    "description": "Fired when the row turns to edit mode. Called with a <a href=\"/api/data-grid/grid-cell-params/\">GridCellParams</a> object."
  },
  {
    "name": "rowEditStop",
    "description": "Fired when the row turns back to view mode. Called with a <a href=\"/api/data-grid/grid-cell-params/\">GridCellParams</a> object."
  },
  {
    "name": "rowSelectionCheckboxChange",
    "description": "Fired when the value of the selection checkbox of a row is changed\nCalled with a GridRowSelectionCheckboxParams object."
  },
  {
    "name": "rowsScroll",
    "description": "Fired during the scroll of the grid viewport. Called with a GridScrollParams object."
  },
  {
    "name": "rowsScrollEnd",
    "description": "Fired when scrolling to the bottom of the grid viewport. Called with a GridRowScrollEndParams object."
  },
  {
    "name": "selectionChange",
    "description": "Fired when the selection state of one or multiple rows changes.\nCalled with a GridSelectionModelChangeParams object."
  },
  {
    "name": "sortModelChange",
    "description": "Fired when the sort model changes.\nCalled with a GridSortModelParams object."
  },
  {
    "name": "stateChange",
    "description": "Fired when the state of the grid is updated. Called with a GridState object."
  },
  { "name": "unmount", "description": "Fired when the grid is unmounted." },
  {
    "name": "viewportRowsChange",
    "description": "Fired when the rows in the viewport is changed. Called with a GridViewportRowsChange object."
  }
]
